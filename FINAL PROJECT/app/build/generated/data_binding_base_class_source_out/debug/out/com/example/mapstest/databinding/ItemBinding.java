// Generated by view binder compiler. Do not edit!
package com.example.mapstest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.mapstest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout expandableView;

  @NonNull
  public final LinearLayout layoutTag;

  @NonNull
  public final FrameLayout title;

  @NonNull
  public final TextView titleText;

  private ItemBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout expandableView,
      @NonNull LinearLayout layoutTag, @NonNull FrameLayout title, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.expandableView = expandableView;
    this.layoutTag = layoutTag;
    this.title = title;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expandable_view;
      LinearLayout expandableView = rootView.findViewById(id);
      if (expandableView == null) {
        break missingId;
      }

      id = R.id.layout_tag;
      LinearLayout layoutTag = rootView.findViewById(id);
      if (layoutTag == null) {
        break missingId;
      }

      id = R.id.title;
      FrameLayout title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.title_text;
      TextView titleText = rootView.findViewById(id);
      if (titleText == null) {
        break missingId;
      }

      return new ItemBinding((ConstraintLayout) rootView, expandableView, layoutTag, title,
          titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
